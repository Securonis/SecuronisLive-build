#!/bin/bash

# Check if running as root
if [ "$EUID" -ne 0 ]; then 
    echo "Please run as root"
    exit 1
fi

declare -A keymaps

# Countries and keyboard layouts
keymaps=(
    ["1"]="us"
    ["2"]="uk"
    ["3"]="de"
    ["4"]="fr"
    ["5"]="es"
    ["6"]="it"
    ["7"]="nl"
    ["8"]="be"
    ["9"]="ch"
    ["10"]="at"
    ["11"]="se"
    ["12"]="no"
    ["13"]="dk"
    ["14"]="fi"
    ["15"]="pt"
    ["16"]="ru"
    ["17"]="pl"
    ["18"]="cz"
    ["19"]="hu"
    ["20"]="gr"
    ["21"]="tr"
    ["22"]="cn"
    ["23"]="jp"
    ["24"]="kr"
    ["25"]="in"
    ["26"]="br"
    ["27"]="ar"
    ["28"]="mx"
    ["29"]="ca"
    ["30"]="au"
    ["31"]="nz"
    ["32"]="za"
    ["33"]="sa"
    ["34"]="ae"
    ["35"]="il"
    ["36"]="bg"
    ["37"]="hr"
    ["38"]="ro"
    ["39"]="sk"
    ["40"]="si"
    ["41"]="rs"
    ["42"]="ua"
    ["43"]="by"
    ["44"]="ee"
    ["45"]="lv"
    ["46"]="lt"
    ["47"]="is"
    ["48"]="ie"
    ["49"]="mt"
    ["50"]="cy"
)

echo "Select your keyboard layout:"
for i in "${!keymaps[@]}"; do
    echo "$i) ${keymaps[$i]}"
done

read -p "Enter your choice (default: 1 - us): " choice

if [[ -z "$choice" || -z "${keymaps[$choice]}" ]]; then
    keymap="us"
else
    keymap="${keymaps[$choice]}"
fi

echo "You selected keyboard layout: $keymap"
read -p "Keyboard layout will be set to $keymap [Y/n]: " confirm
confirm=${confirm,,}  # Convert to lowercase

if [[ -z "$confirm" || "$confirm" == "y" || "$confirm" == "yy" ]]; then
    echo "Setting keyboard layout to: $keymap"
    setxkbmap "$keymap"
else
    echo "Keyboard layout change cancelled."
    exit 1
fi

# Timezone selection
timezones=(
    "1) Africa/Abidjan"
    "2) Africa/Cairo"
    "3) Africa/Johannesburg"
    "4) America/New_York"
    "5) America/Los_Angeles"
    "6) America/Sao_Paulo"
    "7) Asia/Shanghai"
    "8) Asia/Tokyo"
    "9) Asia/Istanbul"
    "10) Europe/Berlin"
    "11) Europe/London"
    "12) Europe/Moscow"
    "13) Pacific/Auckland"
    "14) Australia/Sydney"
)

echo "Would you like to set your timezone? [Y/n]"
read set_timezone
set_timezone=${set_timezone,,}  # Convert to lowercase

if [[ -z "$set_timezone" || "$set_timezone" == "y" || "$set_timezone" == "yy" ]]; then
    echo "Select your timezone:"
    for timezone in "${timezones[@]}"; do
        echo "$timezone"
    done
    
    read -p "Enter the number of your choice: " timezone_choice
    timezone=${timezones[$timezone_choice - 1]}
    timezone=${timezone##*) }
    
    read -p "Timezone will be set to $timezone [Y/n]: " timezone_confirm
    timezone_confirm=${timezone_confirm,,}  # Convert to lowercase
    
    if [[ -z "$timezone_confirm" || "$timezone_confirm" == "y" || "$timezone_confirm" == "yy" ]]; then
        # Set timezone
        timedatectl set-timezone "$timezone"
        
        # Enable and start NTP service
        systemctl enable systemd-timesyncd
        systemctl start systemd-timesyncd
        
        # Force time sync
        systemctl restart systemd-timesyncd
        
        echo "Timezone set to $timezone"
        echo "Current time: $(date)"
    else
        echo "Timezone change cancelled."
    fi
fi

# Manual time setting option
echo "Would you like to set the time manually? [Y/n]"
read set_manual_time
set_manual_time=${set_manual_time,,}

if [[ -z "$set_manual_time" || "$set_manual_time" == "y" || "$set_manual_time" == "yy" ]]; then
    read -p "Enter date and time (YYYY-MM-DD HH:MM:SS): " manual_time
    
    if date -s "$manual_time" &>/dev/null; then
        echo "Time set to: $(date)"
        
        # Disable NTP temporarily to prevent auto-sync
        timedatectl set-ntp false
        
        # Enable hardware clock sync
        hwclock --systohc
        
        echo "Time has been set manually. NTP has been disabled."
        echo "To re-enable NTP, run: timedatectl set-ntp true"
    else
        echo "Invalid date/time format. Please use YYYY-MM-DD HH:MM:SS"
    fi
fi

echo "Settings have been successfully applied."
